(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var queryString=require("querystring");var httpService=require("./util/http");var API_HOSTNAME="api.giphy.com";var API_BASE_PATH="/v1/";var PUBLIC_BETA_API_KEY="dc6zaTOxFJmzC";var promisesExist=typeof Promise!=="undefined";function _handleErr(err,callback){if(callback){return callback(err)}else if(promisesExist){return Promise.reject(err)}else{throw new Error(err)}}var GiphyAPI=function(options){if(typeof options==="string"||typeof options==="undefined"||options===null){this.apiKey=options||PUBLIC_BETA_API_KEY;options={}}else if(typeof options==="object"){this.apiKey=options.apiKey||PUBLIC_BETA_API_KEY}else{throw new Error("Invalid options passed to giphy-api")}this.https=options.https;this.timeout=options.timeout||3e4};GiphyAPI.prototype={search:function(options,callback){if(!options){return _handleErr("Search phrase cannot be empty.",callback)}return this._request({api:options.api||"gifs",endpoint:"search",query:typeof options==="string"?{q:options}:options},callback)},id:function(id,callback){var idIsArr=Array.isArray(id);if(!id||idIsArr&&id.length===0){return _handleErr("Id required for id API call",callback)}if(idIsArr){id=id.join()}return this._request({api:"gifs",query:{ids:id}},callback)},translate:function(options,callback){if(!options){return _handleErr("Translate phrase cannot be empty.",callback)}return this._request({api:options.api||"gifs",endpoint:"translate",query:typeof options==="string"?{s:options}:options},callback)},random:function(options,callback){var reqOptions={api:(options?options.api:null)||"gifs",endpoint:"random"};if(typeof options==="string"){reqOptions.query={tag:options}}else if(typeof options==="object"){reqOptions.query=options}else if(typeof options==="function"){callback=options}return this._request(reqOptions,callback)},trending:function(options,callback){var reqOptions={endpoint:"trending"};reqOptions.api=(options?options.api:null)||"gifs";if(options){delete options.api}if(typeof options==="object"&&Object.keys(options).length!==0){reqOptions.query=options}else if(typeof options==="function"){callback=options}return this._request(reqOptions,callback)},_request:function(options,callback){if(!callback&&!promisesExist){throw new Error("Callback must be provided if promises are unavailable")}var endpoint="";if(options.endpoint){endpoint="/"+options.endpoint}endpoint+="?";var query;var self=this;if(typeof options.query!=="undefined"&&typeof options.query==="object"){if(Object.keys(options.query).length===0){if(callback){return callback("Options object should not be empty")}return Promise.reject("Options object should not be empty")}options.query.api_key=this.apiKey;query=queryString.stringify(options.query)}else{query=queryString.stringify({api_key:self.apiKey})}var httpOptions={request:{host:API_HOSTNAME,path:API_BASE_PATH+options.api+endpoint+query},https:this.https,timeout:this.timeout,fmt:options.query&&options.query.fmt};var makeRequest=function(resolve,reject){httpService.get(httpOptions,resolve,reject)};if(callback){var resolve=function(res){callback(null,res)};var reject=function(err){callback(err)};makeRequest(resolve,reject)}else{if(!promisesExist){throw new Error("Callback must be provided unless Promises are available")}return new Promise(function(resolve,reject){makeRequest(resolve,reject)})}}};module.exports=function(apiKey,options){return new GiphyAPI(apiKey,options)}},{"./util/http":5,querystring:4}],2:[function(require,module,exports){"use strict";function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||"&";eq=eq||"=";var obj={};if(typeof qs!=="string"||qs.length===0){return obj}var regexp=/\+/g;qs=qs.split(sep);var maxKeys=1e3;if(options&&typeof options.maxKeys==="number"){maxKeys=options.maxKeys}var len=qs.length;if(maxKeys>0&&len>maxKeys){len=maxKeys}for(var i=0;i<len;++i){var x=qs[i].replace(regexp,"%20"),idx=x.indexOf(eq),kstr,vstr,k,v;if(idx>=0){kstr=x.substr(0,idx);vstr=x.substr(idx+1)}else{kstr=x;vstr=""}k=decodeURIComponent(kstr);v=decodeURIComponent(vstr);if(!hasOwnProperty(obj,k)){obj[k]=v}else if(isArray(obj[k])){obj[k].push(v)}else{obj[k]=[obj[k],v]}}return obj};var isArray=Array.isArray||function(xs){return Object.prototype.toString.call(xs)==="[object Array]"}},{}],3:[function(require,module,exports){"use strict";var stringifyPrimitive=function(v){switch(typeof v){case"string":return v;case"boolean":return v?"true":"false";case"number":return isFinite(v)?v:"";default:return""}};module.exports=function(obj,sep,eq,name){sep=sep||"&";eq=eq||"=";if(obj===null){obj=undefined}if(typeof obj==="object"){return map(objectKeys(obj),function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;if(isArray(obj[k])){return map(obj[k],function(v){return ks+encodeURIComponent(stringifyPrimitive(v))}).join(sep)}else{return ks+encodeURIComponent(stringifyPrimitive(obj[k]))}}).join(sep)}if(!name)return"";return encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj))};var isArray=Array.isArray||function(xs){return Object.prototype.toString.call(xs)==="[object Array]"};function map(xs,f){if(xs.map)return xs.map(f);var res=[];for(var i=0;i<xs.length;i++){res.push(f(xs[i],i))}return res}var objectKeys=Object.keys||function(obj){var res=[];for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))res.push(key)}return res}},{}],4:[function(require,module,exports){"use strict";exports.decode=exports.parse=require("./decode");exports.encode=exports.stringify=require("./encode")},{"./decode":2,"./encode":3}],5:[function(require,module,exports){exports.get=function(options,resolve,reject){var request=options.request;var timeout=options.timeout;var fmt=options.fmt;var timerId=setTimeout(function(){reject(new Error("Timeout while fetching asset"))},timeout);var xhr=new XMLHttpRequest;xhr.withCredentials=false;var onFail=function(err){clearTimeout(timerId);err=err||new Error("Giphy API request failed!");reject(err)};xhr.addEventListener("error",onFail);xhr.addEventListener("abort",onFail);xhr.addEventListener("load",function(){clearTimeout(timerId);var body=xhr.response;if(fmt!=="html"){body=JSON.parse(body)}resolve(body)});var protocol=options.https?"https":"http";var host=request.host;var path=request.path;var url=protocol+"://"+host+path;xhr.open("GET",url,true);xhr.send()}},{}]},{},[1]);
